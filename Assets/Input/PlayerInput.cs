//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Input/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""6cc707ac-8d23-4392-b3cc-d068cb29ec00"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""3411a0ac-7264-4e7e-8c13-4831023f4efb"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""NormalizeVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""34161f38-46df-4297-83b6-fe2b15f9b1aa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""44bcb9dd-67f5-488f-9d84-ee82502a9c8a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""4f38a58c-3a87-4064-9b30-ec3eab6de448"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LightAttack"",
                    ""type"": ""Button"",
                    ""id"": ""bd4e9af7-9a2e-4979-aeb8-6568a94ab998"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HeavyAttack"",
                    ""type"": ""Button"",
                    ""id"": ""cb2d5b90-834f-4b27-b8f2-ba3354ab1bb5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Block"",
                    ""type"": ""Button"",
                    ""id"": ""f28774f3-5630-4062-a3b3-28b2c138d37d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Magic1"",
                    ""type"": ""Button"",
                    ""id"": ""6df84c94-7149-4f2e-8aac-ff72ebe19558"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Magic2"",
                    ""type"": ""Button"",
                    ""id"": ""3357cdb5-ca04-47a9-a2ee-b7e390426b0e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Magic3"",
                    ""type"": ""Button"",
                    ""id"": ""57b6995f-40a9-46a8-940f-70f7fd748273"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Magic4"",
                    ""type"": ""Button"",
                    ""id"": ""faa8d45d-8135-4656-850f-8f2eb81af585"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TargetEnemy"",
                    ""type"": ""Button"",
                    ""id"": ""c6669124-9fa8-4e90-8655-ee370c7702f1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchMagicSpellSlots"",
                    ""type"": ""Button"",
                    ""id"": ""79b717d6-81e5-445a-a3f2-9903f3cb0ff7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Unsheath"",
                    ""type"": ""Button"",
                    ""id"": ""88f313a3-6774-47dc-8dc0-1deb318d3c4e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""aa6b4bb8-7c49-4368-8d27-efc27ef0ea28"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""4f4e7671-5799-4fe1-928a-e43ece52af78"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActivateRune"",
                    ""type"": ""Button"",
                    ""id"": ""86f8bfe3-278e-4a63-a12a-52d9ec272c17"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ArmorPage"",
                    ""type"": ""Button"",
                    ""id"": ""aefc9ffc-e355-4f05-8a12-98ef015028fe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Map"",
                    ""type"": ""Button"",
                    ""id"": ""3cf2fa77-8699-4df3-bff3-32fb2756a8fe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MagicSelection"",
                    ""type"": ""Button"",
                    ""id"": ""2ba45359-c97d-497c-b998-e20cf6c5e7f9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SkillTree"",
                    ""type"": ""Button"",
                    ""id"": ""5b60a36d-5125-4852-9f63-c7add31abdf6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""141b22a2-9e5c-4f67-8c92-b97db0e9cde9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""fe455af1-d251-4901-9741-d45428f0c4be"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""53bfbee1-a6de-440a-a951-42e0bc029443"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""958f5904-f836-4793-b472-ffac8427f6e0"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""c434a1b1-7df0-46e0-bb5d-0d163df88c83"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""170fd036-7ad2-4f3a-927d-9752571439a3"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c890dfdd-2a24-4d21-a248-41e7aca47f33"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ab043aac-5692-4228-8929-d593cab0dfd6"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""637dd4fa-2547-42c3-8239-d3f183b07de5"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LightAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a8f81cf-a1d8-4d88-9ca6-4ee4e20b99d0"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HeavyAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""971342f6-8147-4675-9853-332977ce583f"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Block"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6c5c2b0a-7071-4ae0-80b4-69be53137000"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Magic1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e69ec243-607e-4f21-a47f-a8aa1c883641"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Magic2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""92881e6d-e196-4c0a-9e13-0777640e9a10"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Magic3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""546e29d9-e010-448a-a50e-ca74562923d7"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Magic4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""721fac2f-8fe3-4941-970c-42d5edd53b5a"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TargetEnemy"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""43abc20b-50fe-410d-bd66-5ce3e85d2689"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchMagicSpellSlots"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4b06494c-a4a5-4577-a067-8a7ec4dbb2b0"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Unsheath"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""42985315-407f-42a7-98cc-5749a8a22771"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""957396e4-3ac9-4e9d-8928-9d2696b73761"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d5c790cb-f8be-4867-a0e7-02cc8faf6770"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ActivateRune"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""48f5e3fa-dbc4-4991-b356-883a534da7f3"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ArmorPage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5fef8ea7-b4d0-40f2-b90b-ba9159ce424d"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""40ba1ea2-3ff1-42a0-a1f7-65adc33589ed"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MagicSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""343da56f-1985-4edd-b3d6-e472671881af"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkillTree"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""23512479-a02b-4f15-9741-4b9ef7ee6af3"",
            ""actions"": [
                {
                    ""name"": ""Unpause"",
                    ""type"": ""Button"",
                    ""id"": ""a4ca48e5-63a0-4cbe-b25e-af4347ee9285"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NextRightPage"",
                    ""type"": ""Button"",
                    ""id"": ""a266fffa-8f2c-4b33-a95c-a9f6bf3118fa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NextLeftPage"",
                    ""type"": ""Button"",
                    ""id"": ""9860caad-99d4-485c-af15-5e3377c4c09e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rune"",
                    ""type"": ""Button"",
                    ""id"": ""7d690c40-15eb-4453-910e-b187dc318191"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c6d1351d-0999-433e-b8ad-ca88fe0a3485"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Unpause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b8458542-9020-489b-971c-9ea3da61d184"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextRightPage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e6f8f4de-75c8-4cd1-bb43-7dc8085fdd95"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextLeftPage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ce57de5d-3335-4419-aae1-b27d61b4ef01"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rune"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Dialogue"",
            ""id"": ""14c0fb72-645d-443b-aa2c-8c78e5bcc002"",
            ""actions"": [
                {
                    ""name"": ""Proceed Dialogue"",
                    ""type"": ""Button"",
                    ""id"": ""64c600e6-de91-4c8d-bd38-35585e8be7a9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""699cb1c7-38d5-4dd9-ae26-fbca2bcd8023"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Proceed Dialogue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""676b5b28-7717-44e7-b899-6669521821b8"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Proceed Dialogue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6f416ad5-841d-4a7c-8252-1529eed87dda"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Proceed Dialogue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_Move = m_Gameplay.FindAction("Move", throwIfNotFound: true);
        m_Gameplay_Sprint = m_Gameplay.FindAction("Sprint", throwIfNotFound: true);
        m_Gameplay_Jump = m_Gameplay.FindAction("Jump", throwIfNotFound: true);
        m_Gameplay_Dash = m_Gameplay.FindAction("Dash", throwIfNotFound: true);
        m_Gameplay_LightAttack = m_Gameplay.FindAction("LightAttack", throwIfNotFound: true);
        m_Gameplay_HeavyAttack = m_Gameplay.FindAction("HeavyAttack", throwIfNotFound: true);
        m_Gameplay_Block = m_Gameplay.FindAction("Block", throwIfNotFound: true);
        m_Gameplay_Magic1 = m_Gameplay.FindAction("Magic1", throwIfNotFound: true);
        m_Gameplay_Magic2 = m_Gameplay.FindAction("Magic2", throwIfNotFound: true);
        m_Gameplay_Magic3 = m_Gameplay.FindAction("Magic3", throwIfNotFound: true);
        m_Gameplay_Magic4 = m_Gameplay.FindAction("Magic4", throwIfNotFound: true);
        m_Gameplay_TargetEnemy = m_Gameplay.FindAction("TargetEnemy", throwIfNotFound: true);
        m_Gameplay_SwitchMagicSpellSlots = m_Gameplay.FindAction("SwitchMagicSpellSlots", throwIfNotFound: true);
        m_Gameplay_Unsheath = m_Gameplay.FindAction("Unsheath", throwIfNotFound: true);
        m_Gameplay_Interact = m_Gameplay.FindAction("Interact", throwIfNotFound: true);
        m_Gameplay_Pause = m_Gameplay.FindAction("Pause", throwIfNotFound: true);
        m_Gameplay_ActivateRune = m_Gameplay.FindAction("ActivateRune", throwIfNotFound: true);
        m_Gameplay_ArmorPage = m_Gameplay.FindAction("ArmorPage", throwIfNotFound: true);
        m_Gameplay_Map = m_Gameplay.FindAction("Map", throwIfNotFound: true);
        m_Gameplay_MagicSelection = m_Gameplay.FindAction("MagicSelection", throwIfNotFound: true);
        m_Gameplay_SkillTree = m_Gameplay.FindAction("SkillTree", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Unpause = m_UI.FindAction("Unpause", throwIfNotFound: true);
        m_UI_NextRightPage = m_UI.FindAction("NextRightPage", throwIfNotFound: true);
        m_UI_NextLeftPage = m_UI.FindAction("NextLeftPage", throwIfNotFound: true);
        m_UI_Rune = m_UI.FindAction("Rune", throwIfNotFound: true);
        // Dialogue
        m_Dialogue = asset.FindActionMap("Dialogue", throwIfNotFound: true);
        m_Dialogue_ProceedDialogue = m_Dialogue.FindAction("Proceed Dialogue", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private List<IGameplayActions> m_GameplayActionsCallbackInterfaces = new List<IGameplayActions>();
    private readonly InputAction m_Gameplay_Move;
    private readonly InputAction m_Gameplay_Sprint;
    private readonly InputAction m_Gameplay_Jump;
    private readonly InputAction m_Gameplay_Dash;
    private readonly InputAction m_Gameplay_LightAttack;
    private readonly InputAction m_Gameplay_HeavyAttack;
    private readonly InputAction m_Gameplay_Block;
    private readonly InputAction m_Gameplay_Magic1;
    private readonly InputAction m_Gameplay_Magic2;
    private readonly InputAction m_Gameplay_Magic3;
    private readonly InputAction m_Gameplay_Magic4;
    private readonly InputAction m_Gameplay_TargetEnemy;
    private readonly InputAction m_Gameplay_SwitchMagicSpellSlots;
    private readonly InputAction m_Gameplay_Unsheath;
    private readonly InputAction m_Gameplay_Interact;
    private readonly InputAction m_Gameplay_Pause;
    private readonly InputAction m_Gameplay_ActivateRune;
    private readonly InputAction m_Gameplay_ArmorPage;
    private readonly InputAction m_Gameplay_Map;
    private readonly InputAction m_Gameplay_MagicSelection;
    private readonly InputAction m_Gameplay_SkillTree;
    public struct GameplayActions
    {
        private @PlayerInput m_Wrapper;
        public GameplayActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Gameplay_Move;
        public InputAction @Sprint => m_Wrapper.m_Gameplay_Sprint;
        public InputAction @Jump => m_Wrapper.m_Gameplay_Jump;
        public InputAction @Dash => m_Wrapper.m_Gameplay_Dash;
        public InputAction @LightAttack => m_Wrapper.m_Gameplay_LightAttack;
        public InputAction @HeavyAttack => m_Wrapper.m_Gameplay_HeavyAttack;
        public InputAction @Block => m_Wrapper.m_Gameplay_Block;
        public InputAction @Magic1 => m_Wrapper.m_Gameplay_Magic1;
        public InputAction @Magic2 => m_Wrapper.m_Gameplay_Magic2;
        public InputAction @Magic3 => m_Wrapper.m_Gameplay_Magic3;
        public InputAction @Magic4 => m_Wrapper.m_Gameplay_Magic4;
        public InputAction @TargetEnemy => m_Wrapper.m_Gameplay_TargetEnemy;
        public InputAction @SwitchMagicSpellSlots => m_Wrapper.m_Gameplay_SwitchMagicSpellSlots;
        public InputAction @Unsheath => m_Wrapper.m_Gameplay_Unsheath;
        public InputAction @Interact => m_Wrapper.m_Gameplay_Interact;
        public InputAction @Pause => m_Wrapper.m_Gameplay_Pause;
        public InputAction @ActivateRune => m_Wrapper.m_Gameplay_ActivateRune;
        public InputAction @ArmorPage => m_Wrapper.m_Gameplay_ArmorPage;
        public InputAction @Map => m_Wrapper.m_Gameplay_Map;
        public InputAction @MagicSelection => m_Wrapper.m_Gameplay_MagicSelection;
        public InputAction @SkillTree => m_Wrapper.m_Gameplay_SkillTree;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void AddCallbacks(IGameplayActions instance)
        {
            if (instance == null || m_Wrapper.m_GameplayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Sprint.started += instance.OnSprint;
            @Sprint.performed += instance.OnSprint;
            @Sprint.canceled += instance.OnSprint;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Dash.started += instance.OnDash;
            @Dash.performed += instance.OnDash;
            @Dash.canceled += instance.OnDash;
            @LightAttack.started += instance.OnLightAttack;
            @LightAttack.performed += instance.OnLightAttack;
            @LightAttack.canceled += instance.OnLightAttack;
            @HeavyAttack.started += instance.OnHeavyAttack;
            @HeavyAttack.performed += instance.OnHeavyAttack;
            @HeavyAttack.canceled += instance.OnHeavyAttack;
            @Block.started += instance.OnBlock;
            @Block.performed += instance.OnBlock;
            @Block.canceled += instance.OnBlock;
            @Magic1.started += instance.OnMagic1;
            @Magic1.performed += instance.OnMagic1;
            @Magic1.canceled += instance.OnMagic1;
            @Magic2.started += instance.OnMagic2;
            @Magic2.performed += instance.OnMagic2;
            @Magic2.canceled += instance.OnMagic2;
            @Magic3.started += instance.OnMagic3;
            @Magic3.performed += instance.OnMagic3;
            @Magic3.canceled += instance.OnMagic3;
            @Magic4.started += instance.OnMagic4;
            @Magic4.performed += instance.OnMagic4;
            @Magic4.canceled += instance.OnMagic4;
            @TargetEnemy.started += instance.OnTargetEnemy;
            @TargetEnemy.performed += instance.OnTargetEnemy;
            @TargetEnemy.canceled += instance.OnTargetEnemy;
            @SwitchMagicSpellSlots.started += instance.OnSwitchMagicSpellSlots;
            @SwitchMagicSpellSlots.performed += instance.OnSwitchMagicSpellSlots;
            @SwitchMagicSpellSlots.canceled += instance.OnSwitchMagicSpellSlots;
            @Unsheath.started += instance.OnUnsheath;
            @Unsheath.performed += instance.OnUnsheath;
            @Unsheath.canceled += instance.OnUnsheath;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
            @ActivateRune.started += instance.OnActivateRune;
            @ActivateRune.performed += instance.OnActivateRune;
            @ActivateRune.canceled += instance.OnActivateRune;
            @ArmorPage.started += instance.OnArmorPage;
            @ArmorPage.performed += instance.OnArmorPage;
            @ArmorPage.canceled += instance.OnArmorPage;
            @Map.started += instance.OnMap;
            @Map.performed += instance.OnMap;
            @Map.canceled += instance.OnMap;
            @MagicSelection.started += instance.OnMagicSelection;
            @MagicSelection.performed += instance.OnMagicSelection;
            @MagicSelection.canceled += instance.OnMagicSelection;
            @SkillTree.started += instance.OnSkillTree;
            @SkillTree.performed += instance.OnSkillTree;
            @SkillTree.canceled += instance.OnSkillTree;
        }

        private void UnregisterCallbacks(IGameplayActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Sprint.started -= instance.OnSprint;
            @Sprint.performed -= instance.OnSprint;
            @Sprint.canceled -= instance.OnSprint;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Dash.started -= instance.OnDash;
            @Dash.performed -= instance.OnDash;
            @Dash.canceled -= instance.OnDash;
            @LightAttack.started -= instance.OnLightAttack;
            @LightAttack.performed -= instance.OnLightAttack;
            @LightAttack.canceled -= instance.OnLightAttack;
            @HeavyAttack.started -= instance.OnHeavyAttack;
            @HeavyAttack.performed -= instance.OnHeavyAttack;
            @HeavyAttack.canceled -= instance.OnHeavyAttack;
            @Block.started -= instance.OnBlock;
            @Block.performed -= instance.OnBlock;
            @Block.canceled -= instance.OnBlock;
            @Magic1.started -= instance.OnMagic1;
            @Magic1.performed -= instance.OnMagic1;
            @Magic1.canceled -= instance.OnMagic1;
            @Magic2.started -= instance.OnMagic2;
            @Magic2.performed -= instance.OnMagic2;
            @Magic2.canceled -= instance.OnMagic2;
            @Magic3.started -= instance.OnMagic3;
            @Magic3.performed -= instance.OnMagic3;
            @Magic3.canceled -= instance.OnMagic3;
            @Magic4.started -= instance.OnMagic4;
            @Magic4.performed -= instance.OnMagic4;
            @Magic4.canceled -= instance.OnMagic4;
            @TargetEnemy.started -= instance.OnTargetEnemy;
            @TargetEnemy.performed -= instance.OnTargetEnemy;
            @TargetEnemy.canceled -= instance.OnTargetEnemy;
            @SwitchMagicSpellSlots.started -= instance.OnSwitchMagicSpellSlots;
            @SwitchMagicSpellSlots.performed -= instance.OnSwitchMagicSpellSlots;
            @SwitchMagicSpellSlots.canceled -= instance.OnSwitchMagicSpellSlots;
            @Unsheath.started -= instance.OnUnsheath;
            @Unsheath.performed -= instance.OnUnsheath;
            @Unsheath.canceled -= instance.OnUnsheath;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
            @ActivateRune.started -= instance.OnActivateRune;
            @ActivateRune.performed -= instance.OnActivateRune;
            @ActivateRune.canceled -= instance.OnActivateRune;
            @ArmorPage.started -= instance.OnArmorPage;
            @ArmorPage.performed -= instance.OnArmorPage;
            @ArmorPage.canceled -= instance.OnArmorPage;
            @Map.started -= instance.OnMap;
            @Map.performed -= instance.OnMap;
            @Map.canceled -= instance.OnMap;
            @MagicSelection.started -= instance.OnMagicSelection;
            @MagicSelection.performed -= instance.OnMagicSelection;
            @MagicSelection.canceled -= instance.OnMagicSelection;
            @SkillTree.started -= instance.OnSkillTree;
            @SkillTree.performed -= instance.OnSkillTree;
            @SkillTree.canceled -= instance.OnSkillTree;
        }

        public void RemoveCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameplayActions instance)
        {
            foreach (var item in m_Wrapper.m_GameplayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_Unpause;
    private readonly InputAction m_UI_NextRightPage;
    private readonly InputAction m_UI_NextLeftPage;
    private readonly InputAction m_UI_Rune;
    public struct UIActions
    {
        private @PlayerInput m_Wrapper;
        public UIActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Unpause => m_Wrapper.m_UI_Unpause;
        public InputAction @NextRightPage => m_Wrapper.m_UI_NextRightPage;
        public InputAction @NextLeftPage => m_Wrapper.m_UI_NextLeftPage;
        public InputAction @Rune => m_Wrapper.m_UI_Rune;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @Unpause.started += instance.OnUnpause;
            @Unpause.performed += instance.OnUnpause;
            @Unpause.canceled += instance.OnUnpause;
            @NextRightPage.started += instance.OnNextRightPage;
            @NextRightPage.performed += instance.OnNextRightPage;
            @NextRightPage.canceled += instance.OnNextRightPage;
            @NextLeftPage.started += instance.OnNextLeftPage;
            @NextLeftPage.performed += instance.OnNextLeftPage;
            @NextLeftPage.canceled += instance.OnNextLeftPage;
            @Rune.started += instance.OnRune;
            @Rune.performed += instance.OnRune;
            @Rune.canceled += instance.OnRune;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @Unpause.started -= instance.OnUnpause;
            @Unpause.performed -= instance.OnUnpause;
            @Unpause.canceled -= instance.OnUnpause;
            @NextRightPage.started -= instance.OnNextRightPage;
            @NextRightPage.performed -= instance.OnNextRightPage;
            @NextRightPage.canceled -= instance.OnNextRightPage;
            @NextLeftPage.started -= instance.OnNextLeftPage;
            @NextLeftPage.performed -= instance.OnNextLeftPage;
            @NextLeftPage.canceled -= instance.OnNextLeftPage;
            @Rune.started -= instance.OnRune;
            @Rune.performed -= instance.OnRune;
            @Rune.canceled -= instance.OnRune;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);

    // Dialogue
    private readonly InputActionMap m_Dialogue;
    private List<IDialogueActions> m_DialogueActionsCallbackInterfaces = new List<IDialogueActions>();
    private readonly InputAction m_Dialogue_ProceedDialogue;
    public struct DialogueActions
    {
        private @PlayerInput m_Wrapper;
        public DialogueActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @ProceedDialogue => m_Wrapper.m_Dialogue_ProceedDialogue;
        public InputActionMap Get() { return m_Wrapper.m_Dialogue; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DialogueActions set) { return set.Get(); }
        public void AddCallbacks(IDialogueActions instance)
        {
            if (instance == null || m_Wrapper.m_DialogueActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DialogueActionsCallbackInterfaces.Add(instance);
            @ProceedDialogue.started += instance.OnProceedDialogue;
            @ProceedDialogue.performed += instance.OnProceedDialogue;
            @ProceedDialogue.canceled += instance.OnProceedDialogue;
        }

        private void UnregisterCallbacks(IDialogueActions instance)
        {
            @ProceedDialogue.started -= instance.OnProceedDialogue;
            @ProceedDialogue.performed -= instance.OnProceedDialogue;
            @ProceedDialogue.canceled -= instance.OnProceedDialogue;
        }

        public void RemoveCallbacks(IDialogueActions instance)
        {
            if (m_Wrapper.m_DialogueActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDialogueActions instance)
        {
            foreach (var item in m_Wrapper.m_DialogueActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DialogueActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DialogueActions @Dialogue => new DialogueActions(this);
    public interface IGameplayActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnLightAttack(InputAction.CallbackContext context);
        void OnHeavyAttack(InputAction.CallbackContext context);
        void OnBlock(InputAction.CallbackContext context);
        void OnMagic1(InputAction.CallbackContext context);
        void OnMagic2(InputAction.CallbackContext context);
        void OnMagic3(InputAction.CallbackContext context);
        void OnMagic4(InputAction.CallbackContext context);
        void OnTargetEnemy(InputAction.CallbackContext context);
        void OnSwitchMagicSpellSlots(InputAction.CallbackContext context);
        void OnUnsheath(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnActivateRune(InputAction.CallbackContext context);
        void OnArmorPage(InputAction.CallbackContext context);
        void OnMap(InputAction.CallbackContext context);
        void OnMagicSelection(InputAction.CallbackContext context);
        void OnSkillTree(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnUnpause(InputAction.CallbackContext context);
        void OnNextRightPage(InputAction.CallbackContext context);
        void OnNextLeftPage(InputAction.CallbackContext context);
        void OnRune(InputAction.CallbackContext context);
    }
    public interface IDialogueActions
    {
        void OnProceedDialogue(InputAction.CallbackContext context);
    }
}
